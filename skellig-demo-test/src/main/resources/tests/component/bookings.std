name('Event service is listening for the inbound events') {
    protocol = rmq
    execution = async
    timeout = 5000
    readFrom ['booking.log']

    variables {
        eventCode = get(insertEventTest).testData.fromIndex(5)
        #eventCode = get(insertEventTest).variables.code
    }

    message {
        json {
                 eventCode = ${eventCode}
                 success = true
        }
    }

    validate {
    # just a demonstration of different ways how the response can be validated
        '\'booking.log\''.toString().jsonPath(eventCode) = ${eventCode}
        '\'booking.log\''.toString() {
               all_match [
                     match('.*eventCode\".*:.*\"${eventCode}\".*')
               ]
               jsonPath(eventCode) = contains(${eventCode})
        }
    }
}

name('Event (.*) exist in the system with default seats') {
    id = insertEventTest
    servers [skellig-db]
    query = 'UPDATE event SET
            name=?, date=?, location=?, price_per_seats=?, taken_seats=?
            WHERE code=?'

    variables {
        code = ${1:evnt00001}
    }

    values [
       'event 1'
       toDateTime(01-01-2021 12:30:00)
       'city 1'
       's1=1,s2=2,s3=3,s4=4,s5=5'
       s5
       ${code}
    ]
}

name('Booking was recorded in the DB with seats (.*)') {
    servers [skellig-db]
    table = booking
    command = select

    where {
       code = get(insertEventTest).testData.fromIndex(5)
    }

    validate {
        skellig-db{
             any_match[
                {
                    seats = ${1:s1}
                }
             ]
        }
    }
}

name('Event (.+) no longer have the taken seats (.+)') {
    provider = jdbc
    servers [skellig-db]
    query = 'SELECT taken_seats FROM event WHERE code=?'

    where [ ${1} ]

    validate {
        skellig-db {
            size = int(1)
            fromIndex(0).taken_seats = contains(${2:s1})
        }
    }
}

name('Event Changed Log was recorded in the DB for event (.+)') {
    provider = cassandra
    servers [skellig-log-db]
    table = skellig.eventchangedlog
    command = select

    validate {
        skellig-log-db {
            any_match [
                 {
                     'after.jsonPath(code,true)' = ${1}
                 }
             ]
        }
    }
}